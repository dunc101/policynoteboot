def app="policynoteserviceboot"
def spokenApplicationName="policy notes service boot"
def readinessProbe="http://localhost:25780/policynoteservice/v2?wsdl"
def team="coe"
def jbossInstanceName="PolicyNoteService-25780"
def deployScript="deploy.sh"
def devServers="dc2004devs|dc2004devt"
def testServers="dc2004devs|dc2004devt"
def stageServers="dc2004devs|dc2004devt"
def prodServers="dc2004devs|dc2004devt"
def requiresManualQATesting="false"
def applicationEmailNotification="dustin.duncan@ipacc.com"
def svnLocation="svn://cvs01/SOARepository/SOAPolicy/PolicyNoteService/trunk-jboss"
def buildJobs = [
[repository: "svn://cvs01/SOARepository/SOAPolicy/PolicyNoteService/trunk-jboss/PolicyNoteServiceDomain", mavencommand: "clean install -DskipTests=true", jbossArtifact: false],[repository: "svn://cvs01/SOARepository/SOAPolicy/PolicyNoteService/trunk-jboss/policynoteboot", mavencommand: "clean package test install deploy pmd:pmd jacoco:prepare-agent jacoco:report sonar:sonar -Dsonar.host.url=http://sonar01.ipacc.com:9000/ -Dsonar.scm.disabled=True", jbossArtifact: true]
]
def devIntegrationTestJobs = [
[repository: "svn://cvs01/SOARepository/SOAPolicy/PolicyNoteService/trunk-jboss/policynoteboot", mavencommand: "clean test"]
]
def testIntegrationTestJobs = [
[repository: "svn://cvs01/SOARepository/SOAPolicy/PolicyNoteService/trunk-jboss/policynoteboot", mavencommand: "clean test"]
]
def stageIntegrationTestJobs = [
[repository: "svn://cvs01/SOARepository/SOAPolicy/PolicyNoteService/trunk-jboss/policynoteboot", mavencommand: "clean test"]
]
