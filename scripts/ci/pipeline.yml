# Needed to checkout SVN Code Only
resource_types:
#- name: pull-request
#  type: docker-image
#  source:
#    repository: robophred/concourse-svn-resource
#    tag: alpha

- name: maven-resource
  type: docker-image
  source:
    repository: pivotalpa/maven-resource
    tag: latest

resources:
- name: resource-main-code
  type: git
  source:
    ignore_paths: [version]
    uri: https://github.com/dunc101/policynoteboot.git

- name: resource-dev-integration-code
  type: git
  source:
    uri: https://github.com/dunc101/policynoteboot.git
    
- name: resource-test-integration-code
  type: git
  source:
    uri: https://github.com/dunc101/policynoteboot.git
    
- name: version
  type: semver
  source:
    driver: git
    uri: https://github.com/dunc101/policynoteboot.git
    branch: master
    file: version
    username: ((github-username))
    password: ((github-password))
    
# nexus repo for SNAPSHOTS. 
- name: artifact
  type: maven-resource
  source:
    url: http://maven01.ipacc.com:8081/nexus/content/repositories/infinity-releases
    snapshot_url: http://maven01.ipacc.com:8081/nexus/content/repositories/infinity-snapshots
    artifact: com.ipacc.services:policynoteboot:jar
    username: ((nexus-username))
    password: ((nexus-password))
    
# PCF Deployment to Dev Space Resource
- name: resource-deploy-dev
  type: cf
  source:
    api: https://api.system.cf.ipacc.com
    username: ((cf-username-dev))
    password: ((cf-password-dev))
    organization: ProdAndPricing
    space: Dev

# PCF Deployment to Test Space Resource
- name: resource-deploy-test
  type: cf
  source:
    api: https://api.system.cf.ipacc.com
    username: ((cf-username-test))
    password: ((cf-password-test))
    organization: ProdAndPricing
    space: Test
          
jobs:
- name: build-and-unit-test
  serial: true
  plan: 
  - get: version
    params: {bump: patch}
  - get: resource-main-code
    trigger: true
  - task: build
    # produces a folder named /out with the manifest.yml and app.jar in it that was built
    file: resource-main-code/scripts/ci/build-and-unit-test.yml
  # Add the patch version to git
  - put: version
    params: {file: version/number}
  # Upload the produced artifact to Nexus as a SNAPSHOT (SNAPSHOT created via the build.sh file).
  - put: artifact
    params:
      # app.jar and pom.xml is created in the build.sh script which is invoked via the build-and-unit-test.yml
      file: out/app.jar
      pom_file: out/pom.xml

# Deploy to PCF Dev space
- name: deploy-dev-space
  plan:
  - get: resource-main-code
  - get: artifact
    trigger: true
    passed: [build-and-unit-test]
  - put: resource-deploy-dev
    params:
      manifest: resource-main-code/manifest-dev.yml
      path: artifact/*.jar

# Checkout and run dev suite integration tests    
- name: dev-integration-tests
  serial: true
  plan:
  - get: resource-dev-integration-code
  - get: resource-main-code
    passed: [deploy-dev-space]
  - get: resource-deploy-dev
    trigger: true
    passed: [deploy-dev-space]
  - task: perform-integration-tests
    file: resource-main-code/scripts/ci/dev-integration-tests.yml
#  - put: version
#    params: {file: version/number}

# Deploy to the PCF test space
- name: deploy-test-space
  plan:
  - get: resource-main-code
  - get: resource-deploy-dev
    trigger: true
    passed: [dev-integration-tests]
  - get: artifact
  - put: resource-deploy-test
    params:
      manifest: resource-main-code/manifest-test.yml
      path: artifact/*.jar 
      
# Checkout and run test suite integration suite
- name: test-integration-tests
  serial: true
  plan:
  - get: resource-main-code
  - get: resource-test-integration-code
  - get: resource-deploy-test
    trigger: true
    passed: [deploy-test-space]
  - task: perform-integration-tests
    file: resource-main-code/scripts/ci/test-integration-tests.yml
    
- name: bump-minor-version
  serial: true
  plan:
  - get: resource-deploy-test
    trigger: true
    passed: [test-integration-tests]
  - get: version
    params: {bump: minor}
  - get: resource-main-code
  - get: artifact
  - task: create-release-artifact
    file: resource-main-code/scripts/ci/create-nexus-artifact.yml
    # Upload the minor release version again so we know where we left off last time
  - put: version
    params: {file: version/number}